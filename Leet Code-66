Leet Code-66 Plus One

Python:
  class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
      carry=1
      out=[]
      for i in range(len(digits)-1,-1,-1):
        sum=digits[i]+carry
        out.append(sum%10)
        carry=sum//10
      if carry>0:
        out.append(carry)
      out.reverse()
      return out

Rust:
impl Solution {
    pub fn plus_one(digits: Vec<i32>) -> Vec<i32> {
        let mut carry = 1;
        let mut result = Vec::new();
        // Iterate through the digits in reverse
        for &digit in digits.iter().rev() {
            let sum = digit + carry;
            result.push(sum % 10);
            carry = sum / 10;
        }
            // If there's a carry left, add it to the result
        if carry > 0 {
            result.push(carry);
        }
        // Reverse the result to get the correct order
        result.reverse();
        result
    }
}
